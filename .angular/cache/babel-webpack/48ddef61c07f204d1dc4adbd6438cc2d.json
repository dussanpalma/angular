{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/auth\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(authService) {\n      this.authService = authService;\n    }\n\n    login(email, password) {\n      return new Promise((resolve, reject) => {\n        this.authService.signInWithEmailAndPassword(email, password).then(datos => resolve(datos), error => reject(error));\n      });\n    }\n\n    getAuth() {\n      return this.authService.authState.pipe(map(auth => auth));\n    }\n\n    logout() {\n      this.authService.signOut();\n    }\n\n    registrarse(email, password) {\n      return new Promise((resolve, reject) => {\n        this.authService.createUserWithEmailAndPassword(email, password).then(datos => resolve(datos), error => reject(error));\n      });\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.AngularFireAuth));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}