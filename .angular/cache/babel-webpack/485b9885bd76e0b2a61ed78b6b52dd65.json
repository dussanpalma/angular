{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport let ClienteServicio = /*#__PURE__*/(() => {\n  class ClienteServicio {\n    constructor(db) {\n      this.db = db;\n      this.clientesColeccion = db.collection('clientes', ref => ref.orderBy('nombre', 'asc'));\n    }\n\n    getClientes() {\n      //Obtener los clientes\n      this.clientes = this.clientesColeccion.snapshotChanges().pipe(map(cambios => {\n        return cambios.map(accion => {\n          const datos = accion.payload.doc.data();\n          datos.id = accion.payload.doc.id;\n          return datos;\n        });\n      }));\n      return this.clientes;\n    }\n\n    agregarCliente(cliente) {\n      this.clientesColeccion.add(cliente);\n    }\n\n    getCliente(id) {\n      this.clienteDoc = this.db.doc(`clientes/${id}`);\n      return this.cliente = this.clienteDoc.snapshotChanges().pipe(map(accion => {\n        if (accion.payload.exists === false) {\n          return null;\n        } else {\n          const datos = accion.payload.data();\n          datos.id = accion.payload.id;\n          return datos;\n        }\n      }));\n    }\n\n    modificarCliente(cliente) {\n      this.clienteDoc = this.db.doc(`clientes/${cliente.id}`);\n      this.clienteDoc.update(cliente);\n    }\n\n    eliminarCliente(cliente) {\n      this.clienteDoc = this.db.doc(`clientes/${cliente.id}`);\n      this.clienteDoc.delete();\n    }\n\n  }\n\n  ClienteServicio.ɵfac = function ClienteServicio_Factory(t) {\n    return new (t || ClienteServicio)(i0.ɵɵinject(i1.AngularFirestore));\n  };\n\n  ClienteServicio.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteServicio,\n    factory: ClienteServicio.ɵfac\n  });\n  return ClienteServicio;\n})();","map":null,"metadata":{},"sourceType":"module"}